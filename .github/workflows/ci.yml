name: Continuous integration

on:
  push:
    branches:
      - 'feature/**'
      - 'release/**'
      - 'develop'
      - 'master'
  pull_request:
    branches: [ "main" ]

env:
  CARGO_INCREMENTAL: false
  CARGO_TERM_COLOR: always
  RUST_LOG: info
  RUST_BACKTRACE: full
  REPO_MSRV: "1.72"

jobs:
  test-coverage:
    name: Test coverage report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Install Repo MSRV toolchain
        run: |
          rustup toolchain install ${{ env.REPO_MSRV }} --no-self-update --profile=minimal -c llvm-tools
          cargo -V        

      - name: Install cargo-nextest and cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest,cargo-llvm-cov
          
      - name: caching
        uses: Swatinem/rust-cache@v2
          
      - name: Generate coverage report
        shell: bash
        run: |
          set -e
          cargo coverage

  generate-lcov:
    name: Generate line coverage
    needs: test-coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Install Repo MSRV toolchain
        run: |
          rustup toolchain install ${{ env.REPO_MSRV }} --no-self-update --profile=minimal -c llvm-tools
          cargo -V        

      - name: Install cargo-nextest and cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest,cargo-llvm-cov
          
      - name: caching
        uses: Swatinem/rust-cache@v2          

      - name: Generate line coverage file
        id: coverage
        shell: bash
        run: |
          set -e
          cargo generate-lcov

      - name: Upload coverage report to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true
          if: steps.coverage.outcome == 'success'
          verbose: true